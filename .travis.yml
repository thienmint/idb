sudo: false
language: python
cache:
  directories:
  - "$HOME/google-cloud-sdk/"
env:
- GAE_PYTHONPATH=${HOME}/.cache/google_appengine PATH=$PATH:${HOME}/google-cloud-sdk/bin
  PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH} CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
- openssl aes-256-cbc -K $encrypted_baae4e866404_key -iv $encrypted_baae4e866404_iv
  -in credentials.tar.gz.enc -out credentials.tar.gz -d
# Install Google App Engine Python SDK
- if [ ! -d "${GAE_PYTHONPATH}" ]; then
    python scripts/fetch_gae_sdk.py $(dirname "${GAE_PYTHONPATH}");
  fi
# [START auth]
# Decrypt the credentials we added to the repo using the key we added with the Travis command line tool
- openssl aes-256-cbc -K $encrypted_baae4e866404_key -iv $encrypted_baae4e866404_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
# If the SDK is not already cached, download it and unpack it
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then
    rm -rf $HOME/google-cloud-sdk;
    curl https://sdk.cloud.google.com | bash;
  fi
- source /home/travis/google-cloud-sdk/path.bash.inc
- gcloud version
- tar -xzf credentials.tar.gz
- mkdir -p lib
# Here we use the decrypted service account credentials to authenticate the command line tool
- gcloud auth activate-service-account --key-file client-secret.json
# [END auth]
install:
- gcloud -q components update gae-python
script:
# Run unit tests here
- echo "No testing for now."
# Run E2E tests here
deploy:
  # deploy develop to the staging environment
  - provider: script
    script: scripts/deploy.sh dev
    on:
      branch: dev
  # deploy master to production
  - provider: script
    script: scripts/deploy.sh master
    on:
      branch: master

